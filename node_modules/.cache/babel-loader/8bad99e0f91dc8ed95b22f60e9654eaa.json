{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\LSKIT\\\\Desktop\\\\lexismat-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\LSKIT\\\\Desktop\\\\lexismat-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\LSKIT\\\\Desktop\\\\lexismat-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\LSKIT\\\\Desktop\\\\lexismat-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\LSKIT\\\\Desktop\\\\lexismat-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\LSKIT\\\\Desktop\\\\lexismat-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\LSKIT\\\\Desktop\\\\lexismat-master\\\\src\\\\components\\\\Layout\\\\Sidebar.js\";\nimport lexlogoImage from 'assets/img/logo/lexlogo.png';\nimport SourceLink from 'components/SourceLink';\nimport React from 'react';\nimport { FaLanguage } from 'react-icons/fa';\nimport { MdAccountCircle, MdInsertChart, MdViewCarousel, MdExitToApp, MdSettings, MdAccessAlarm } from 'react-icons/md';\nimport { NavLink } from 'react-router-dom';\nimport { // UncontrolledTooltip,\nCollapse, Nav, Navbar, NavItem, NavLink as BSNavLink } from 'reactstrap';\nimport bn from 'utils/bemnames';\nvar sidebarBackground = {\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat'\n}; // const navContents = [\n//   { to: '/typography', name: 'typography', exact: false, Icon: MdTextFields },\n//   { to: '/tables', name: 'tables', exact: false, Icon: MdBorderAll },\n// ];\n\nvar pageContents = [{\n  to: '/login',\n  name: 'login / signup',\n  exact: false,\n  Icon: MdAccountCircle\n}, {\n  to: '/login-modal',\n  name: 'login modal',\n  exact: false,\n  Icon: MdViewCarousel\n}];\nvar navItems = [{\n  to: '/act01',\n  name: 'activity01',\n  exact: true,\n  isGreenBtnok: '#f8f9fa',\n  isGreenRect: '#1EB972'\n}, {\n  to: '/actsec',\n  name: 'activity02',\n  exact: false,\n  isGreenBtnok: '#f8f9fa',\n  isGreenRect: '#172231'\n}, {\n  to: '/actthird',\n  name: 'activity03',\n  exact: false,\n  isGreenBtnok: '#f8f9fa',\n  isGreenRect: '#172231'\n}, {\n  to: '/actfour',\n  name: 'activity04',\n  exact: false,\n  isGreenBtnok: '#f8f9fa',\n  isGreenRect: '#172231'\n}];\nvar navGeneralItems = [{\n  to: '/config',\n  name: 'configuration',\n  exact: false,\n  isGreenBtnok: '#f8f9fa',\n  isGreenRect: '#172231',\n  Icon: MdSettings\n}, {\n  to: '/mw',\n  name: 'Manage Words',\n  isGreenBtnok: '#f8f9fa',\n  isGreenRect: '#172231',\n  exact: false,\n  Icon: FaLanguage\n}, {\n  to: '/report',\n  name: 'Reports',\n  isGreenBtnok: '#f8f9fa',\n  isGreenRect: '#172231',\n  exact: false,\n  Icon: MdInsertChart\n}, {\n  to: '/about',\n  name: 'About',\n  isGreenBtnok: '#f8f9fa',\n  isGreenRect: '#172231',\n  exact: false,\n  Icon: MdAccessAlarm\n}];\nvar navExitItems = [{\n  to: '/signout',\n  name: 'Exit',\n  exact: true,\n  Icon: MdExitToApp\n}];\nvar bem = bn.create('sidebar');\n\nvar Sidebar = /*#__PURE__*/function (_React$Component) {\n  _inherits(Sidebar, _React$Component);\n\n  function Sidebar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Sidebar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Sidebar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isOpenComponents: true,\n      isOpenContents: true,\n      isOpenPages: true,\n      isGreenBtn: false\n    };\n\n    _this.handleClick = function (name) {\n      return function () {\n        _this.setState(function (prevState) {\n          var isOpen = prevState[\"isOpen\".concat(name)];\n          return _defineProperty({}, \"isOpen\".concat(name), !isOpen);\n        });\n      };\n    };\n\n    _this.greenBtnClick = function (index) {\n      for (var i = 0; i < 4; i++) {\n        navItems[i].isGreenRect = '#172231';\n        navItems[i].isGreenBtnok = 'white';\n      }\n\n      navItems[index].isGreenBtnok = '#1EB972';\n      navItems[index].isGreenRect = '#1EB972';\n    };\n\n    _this.generalBtnClick = function (index) {\n      for (var i = 0; i < 4; i++) {\n        navItems[i].isGreenRect = '#172231';\n        navItems[i].isGreenBtnok = 'white';\n      } // navItems[index].isGreenBtnok = '#1EB972';\n      // navItems[index].isGreenRect = '#1EB972';\n\n    };\n\n    return _this;\n  }\n\n  _createClass(Sidebar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"aside\", {\n        className: bem.b(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: bem.e('background'),\n        style: sidebarBackground,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: bem.e('content'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(SourceLink, {\n        className: \"navbar-brand d-flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: lexlogoImage,\n        width: \"40\",\n        height: \"30\",\n        className: \"pr-2\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }\n      }, \"LEXISMAT\"))), /*#__PURE__*/React.createElement(Nav, {\n        vertical: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ml-3\",\n        style: {\n          fontSize: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }\n      }, \"ACTIVITIES\"), navItems.map(function (_ref2, index) {\n        var to = _ref2.to,\n            name = _ref2.name,\n            exact = _ref2.exact,\n            isGreenBtnok = _ref2.isGreenBtnok,\n            isGreenRect = _ref2.isGreenRect;\n        return /*#__PURE__*/React.createElement(NavItem, {\n          key: index,\n          className: bem.e('nav-item'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(BSNavLink, {\n          id: \"navItem-\".concat(name, \"-\").concat(index),\n          className: \"text-uppercase\",\n          tag: NavLink,\n          to: to,\n          exact: exact,\n          onClick: function onClick() {\n            return _this2.greenBtnClick(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"svg\", {\n          width: \"260\",\n          height: \"50\",\n          viewBox: \"40 0 220 50\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"path\", {\n          d: \"M32 18V20H38.59L27 31.59L28.41 33L40 21.41V28H42V18H32Z\",\n          fill: isGreenBtnok,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 23\n          }\n        }), /*#__PURE__*/React.createElement(\"text\", {\n          x: \"49\",\n          fill: isGreenBtnok,\n          y: \"32\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 23\n          }\n        }, name))));\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ml-3\",\n        style: {\n          fontSize: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }\n      }, \"GENERAL\"), navGeneralItems.map(function (_ref3, index) {\n        var to = _ref3.to,\n            name = _ref3.name,\n            exact = _ref3.exact,\n            Icon = _ref3.Icon;\n        return /*#__PURE__*/React.createElement(NavItem, {\n          key: index,\n          className: bem.e('nav-item'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(BSNavLink, {\n          id: \"navItem-\".concat(name, \"-\").concat(index),\n          className: \"text-uppercase\",\n          tag: NavLink,\n          to: to,\n          activeClassName: \"active\",\n          exact: exact,\n          onClick: function onClick() {\n            return _this2.generalBtnClick(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          className: bem.e('nav-item-icon'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 19\n          }\n        }, name)));\n      }), navExitItems.map(function (_ref4, index) {\n        var to = _ref4.to,\n            name = _ref4.name,\n            exact = _ref4.exact,\n            Icon = _ref4.Icon;\n        return /*#__PURE__*/React.createElement(NavItem, {\n          key: index,\n          className: bem.e('nav-item mt-5'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"ml-3\",\n          style: {\n            fontSize: '10px'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }\n        }, \"ACTIONS\"), /*#__PURE__*/React.createElement(BSNavLink, {\n          id: \"navItem-\".concat(name, \"-\").concat(index),\n          className: \"text-uppercase\",\n          tag: NavLink,\n          to: to,\n          activeClassName: \"active\",\n          exact: exact,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          className: bem.e('nav-item-icon'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 19\n          }\n        }, name)));\n      }))));\n    }\n  }]);\n\n  return Sidebar;\n}(React.Component);\n\nexport default Sidebar;","map":{"version":3,"sources":["C:/Users/LSKIT/Desktop/lexismat-master/src/components/Layout/Sidebar.js"],"names":["lexlogoImage","SourceLink","React","FaLanguage","MdAccountCircle","MdInsertChart","MdViewCarousel","MdExitToApp","MdSettings","MdAccessAlarm","NavLink","Collapse","Nav","Navbar","NavItem","BSNavLink","bn","sidebarBackground","backgroundSize","backgroundRepeat","pageContents","to","name","exact","Icon","navItems","isGreenBtnok","isGreenRect","navGeneralItems","navExitItems","bem","create","Sidebar","state","isOpenComponents","isOpenContents","isOpenPages","isGreenBtn","handleClick","setState","prevState","isOpen","greenBtnClick","index","i","generalBtnClick","b","e","fontSize","map","Component"],"mappings":"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","sourcesContent":["import lexlogoImage from 'assets/img/logo/lexlogo.png';\n\nimport SourceLink from 'components/SourceLink';\n\nimport React from 'react';\nimport { FaLanguage } from 'react-icons/fa';\nimport {\n  MdAccountCircle,\n  MdInsertChart,\n  MdViewCarousel,\n  MdExitToApp,\n  MdSettings,\n  MdAccessAlarm,\n} from 'react-icons/md';\nimport { NavLink } from 'react-router-dom';\n\nimport {\n  // UncontrolledTooltip,\n  Collapse,\n  Nav,\n  Navbar,\n  NavItem,\n  NavLink as BSNavLink,\n} from 'reactstrap';\nimport bn from 'utils/bemnames';\n\nconst sidebarBackground = {\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n};\n\n// const navContents = [\n//   { to: '/typography', name: 'typography', exact: false, Icon: MdTextFields },\n//   { to: '/tables', name: 'tables', exact: false, Icon: MdBorderAll },\n// ];\n\nconst pageContents = [\n  { to: '/login', name: 'login / signup', exact: false, Icon: MdAccountCircle },\n  {\n    to: '/login-modal',\n    name: 'login modal',\n    exact: false,\n    Icon: MdViewCarousel,\n  },\n];\n\nconst navItems = [\n  {\n    to: '/act01',\n    name: 'activity01',\n    exact: true,\n    isGreenBtnok: '#f8f9fa',\n    isGreenRect: '#1EB972',\n  },\n  {\n    to: '/actsec',\n    name: 'activity02',\n    exact: false,\n    isGreenBtnok: '#f8f9fa',\n    isGreenRect: '#172231',\n  },\n  {\n    to: '/actthird',\n    name: 'activity03',\n    exact: false,\n    isGreenBtnok: '#f8f9fa',\n    isGreenRect: '#172231',\n  },\n  {\n    to: '/actfour',\n    name: 'activity04',\n    exact: false,\n    isGreenBtnok: '#f8f9fa',\n    isGreenRect: '#172231',\n  },\n];\nconst navGeneralItems = [\n  {\n    to: '/config',\n    name: 'configuration',\n    exact: false,\n    isGreenBtnok: '#f8f9fa',\n    isGreenRect: '#172231',\n    Icon: MdSettings,\n  },\n  {\n    to: '/mw',\n    name: 'Manage Words',\n    isGreenBtnok: '#f8f9fa',\n    isGreenRect: '#172231',\n    exact: false,\n    Icon: FaLanguage,\n  },\n  {\n    to: '/report',\n    name: 'Reports',\n    isGreenBtnok: '#f8f9fa',\n    isGreenRect: '#172231',\n    exact: false,\n    Icon: MdInsertChart,\n  },\n  {\n    to: '/about',\n    name: 'About',\n    isGreenBtnok: '#f8f9fa',\n    isGreenRect: '#172231',\n    exact: false,\n    Icon: MdAccessAlarm,\n  },\n];\nconst navExitItems = [\n  { to: '/signout', name: 'Exit', exact: true, Icon: MdExitToApp },\n];\n\nconst bem = bn.create('sidebar');\n\nclass Sidebar extends React.Component {\n  state = {\n    isOpenComponents: true,\n    isOpenContents: true,\n    isOpenPages: true,\n    isGreenBtn: false,\n  };\n\n  handleClick = name => () => {\n    this.setState(prevState => {\n      const isOpen = prevState[`isOpen${name}`];\n\n      return {\n        [`isOpen${name}`]: !isOpen,\n      };\n    });\n  };\n  greenBtnClick = index => {\n    for (var i=0;i<4; i++){\n      navItems[i].isGreenRect = '#172231';\n      navItems[i].isGreenBtnok = 'white';\n    }\n    navItems[index].isGreenBtnok = '#1EB972';\n    navItems[index].isGreenRect = '#1EB972';\n  };\n  \n  generalBtnClick = index => {    \n    for (var i=0;i<4; i++){\n      navItems[i].isGreenRect = '#172231';\n      navItems[i].isGreenBtnok = 'white';\n    } \n    // navItems[index].isGreenBtnok = '#1EB972';\n    // navItems[index].isGreenRect = '#1EB972';\n  };\n  render() {\n    return (\n      <aside className={bem.b()}>\n        <div className={bem.e('background')} style={sidebarBackground} />\n        <div className={bem.e('content')}>\n          <Navbar>\n            <SourceLink className=\"navbar-brand d-flex\">\n              <img\n                src={lexlogoImage}\n                width=\"40\"\n                height=\"30\"\n                className=\"pr-2\"\n                alt=\"\"\n              />\n              <span className=\"text-white\">LEXISMAT</span>\n            </SourceLink>\n          </Navbar>\n          <Nav vertical>\n            <span className=\"ml-3\" style={{ fontSize: '10px' }}>\n              ACTIVITIES\n            </span>\n            {navItems.map(\n              ({ to, name, exact, isGreenBtnok, isGreenRect }, index) => (\n                <NavItem key={index} className={bem.e('nav-item')}>\n                  <BSNavLink\n                    id={`navItem-${name}-${index}`}\n                    className=\"text-uppercase\"\n                    tag={NavLink}\n                    to={to}\n                    exact={exact}\n                    onClick={() => this.greenBtnClick(index)}\n                  >\n                    <svg\n                      width=\"260\"\n                      height=\"50\"\n                      viewBox=\"40 0 220 50\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      \n                      <path\n                        d=\"M32 18V20H38.59L27 31.59L28.41 33L40 21.41V28H42V18H32Z\"\n                        fill={isGreenBtnok}\n                      />\n                      <text x=\"49\" fill={isGreenBtnok} y=\"32\">\n                        {name}\n                      </text>\n                    </svg>\n                  </BSNavLink>\n                </NavItem>\n              ),\n            )}\n            <span className=\"ml-3\" style={{ fontSize: '10px' }}>\n              GENERAL\n            </span>\n            {navGeneralItems.map(({ to, name, exact, Icon }, index) => (\n              <NavItem key={index} className={bem.e('nav-item')}>\n                <BSNavLink\n                  id={`navItem-${name}-${index}`}\n                  className=\"text-uppercase\"\n                  tag={NavLink}\n                  to={to}\n                  activeClassName=\"active\"\n                  exact={exact}\n                  onClick={() => this.generalBtnClick(index)}\n                >\n                  <Icon className={bem.e('nav-item-icon')} />\n                  <span>{name}</span>\n                </BSNavLink>\n              </NavItem>\n            ))}\n            {navExitItems.map(({ to, name, exact, Icon }, index) => (\n              <NavItem key={index} className={bem.e('nav-item mt-5')}>\n                <span className=\"ml-3\" style={{ fontSize: '10px' }}>\n                  ACTIONS\n                </span>\n                <BSNavLink\n                  id={`navItem-${name}-${index}`}\n                  className=\"text-uppercase\"\n                  tag={NavLink}\n                  to={to}\n                  activeClassName=\"active\"\n                  exact={exact}\n                >\n                  <Icon className={bem.e('nav-item-icon')} />\n                  <span>{name}</span>\n                </BSNavLink>\n              </NavItem>\n            ))}\n          </Nav>\n        </div>\n      </aside>\n    );\n  }\n}\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}